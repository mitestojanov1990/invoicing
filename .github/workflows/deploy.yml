name: Deploy to DigitalOcean Droplet

on:
  push:
    branches: [ "main" ]  # Adjust the branch as needed

jobs:
  build-frontend:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: List repository root
        run: ls -la

      - name: List frontend directory
        run: ls -la Frontend
        
      - name: Install frontend dependencies and build
        working-directory: frontend
        run: |
          ls -la  # Verify package-lock.json exists here
          npm ci --include=dev
          npm run build
          
      - name: Upload frontend build artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

  deploy:
    needs: build-frontend
    runs-on: ubuntu-20.04
    steps:
      - name: Download frontend build artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

      - name: Deploy Backend via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: invoicing
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "Creating .env file..."
            cat > /var/www/html/invoicing/.env <<'EOF'
            DB_HOST=${{ secrets.DB_HOST }}
            DB_NAME=${{ secrets.DB_NAME }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASS=${{ secrets.DB_PASS }}
            DB_PORT=${{ secrets.DB_PORT }}
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            GOOGLE_REDIRECT_URI=${{ secrets.GOOGLE_REDIRECT_URI }}
            EOF
            echo ".env file created."
            
            cd /var/www/html/invoicing
            echo "Pulling latest code from GitHub..."
            git pull origin main

            echo "Installing Composer dependencies..."
            composer install --no-dev --optimize-autoloader

            echo "Running Phinx migrations..."
            php vendor/bin/phinx migrate -e production

      - name: Deploy Frontend Build via SCP
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: invoicing
          key: ${{ secrets.SSH_KEY }}
          # Copy the contents of frontend/dist (the built files) to the target folder "/var/www/html/invoicing/app/"
          source: "frontend/dist/*"
          target: "/var/www/html/invoicing/app/"

      - name: Reload Apache via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: invoicing
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "Reloading Apache..."
            echo "${{ secrets.SUDO_PASS }}" | sudo -S systemctl reload apache2
            echo "Deployment finished successfully!"
